{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","panels/Teams.js","panels/Profile.js","panels/SearchTournier.js","panels/Notifications.js","App.js","index.js"],"names":["rowStyles","display","justifyContent","gap","padding","captionStyles","marginTop","textAlign","Home","id","go","fetchedUser","before","photo_200","src","description","city","title","first_name","last_name","style","mode","stretched","size","onClick","Persik","props","left","className","persik","alt","Teams","top","type","name","placeholder","options","value","label","role","Profile","SearchTournier","Panel","PanelHeader","PanelHeaderBack","Group","Notifications","App","useState","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","fetchData","e","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e17449d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon28Search } from '@vkontakte/icons';\r\nimport { Icon28GameOutline } from '@vkontakte/icons';\r\nimport { Icon28Notifications } from '@vkontakte/icons';\r\nimport { Icon28Profile } from '@vkontakte/icons';\r\n\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, ButtonGroup, IconButton, Text } from '@vkontakte/vkui';\r\n\r\nconst Home = ({ id, go, fetchedUser }) => ( \r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Profile</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group>\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n\t\t\r\n\t\t<Group>\r\n\t\t\t<Div style={rowStyles}>\r\n\t\t\t\t<ButtonGroup  mode=\"vertical\">\r\n\t\t\t\t\t<Button stretched size=\"l\" onClick={go} data-to=\"profile\">\r\n\t\t\t\t\t\tРедактировать профиль\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button stretched size=\"l\" onClick={go} data-to=\"teams\">\r\n\t\t\t\t\t\tКоманды\r\n\t\t\t\t\t</Button>\t\t\t\t\t\t\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t\t<Group>\r\n\t\t\t<Div style={rowStyles}>\t\r\n\t\t\t\t<ButtonGroup mode=\"horizontal\">\t\r\n\t\t\t\t\t\t<IconButton style={captionStyles} >\r\n\t\t\t\t\t\t\t<Icon28GameOutline style={captionStyles} />\r\n\t\t\t\t\t\t\t<Text>Турниры</Text> \r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<IconButton style={captionStyles} > \r\n\t\t\t\t\t\t\t<Icon28Notifications style={captionStyles} />\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Text>Уведомления</Text> \r\n\t\t\t\t\t\t</IconButton>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<IconButton style={captionStyles} onClick={go} data-to=\"profile\">\r\n\t\t\t\t\t\t\t<Icon28Profile style={captionStyles} />\r\n\t\t\t\t\t\t\t<Text>Профиль</Text> \r\n\t\t\t\t\t\t</IconButton>\t\t\t\t\t\t\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</Div>\r\n        </Group>\r\n\t</Panel>\r\n);\r\n\r\nconst rowStyles = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  gap: 16,\r\n  padding: 16,\r\n};\r\n\r\nconst captionStyles = {\r\n  marginTop: 8,\r\n  textAlign: \"center\",\r\n};\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { View, Panel, PanelHeader, PanelHeaderBack, Group, FormLayout, FormItem, Input, FormLayoutGroup, Textarea, Checkbox, Button, Link, Select, File } from '@vkontakte/vkui';\r\nimport { Icon24Camera } from '@vkontakte/icons';\r\n\r\nconst Teams = props => (\r\n    <Panel id={props.id}>\r\n    <PanelHeader\r\n        left={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}>\r\n        Форма регистрации команды\r\n    </PanelHeader>\r\n    <Group>\r\n        <FormLayout>\r\n            <FormItem\r\n                top=\"Название команды\"\r\n            >\r\n                <Input\r\n                    type=\"name\"\r\n                    name=\"comand_name\"\r\n                    placeholder='название команды'\r\n                />\r\n            </FormItem>\r\n            <FormItem top=\"Дисциплина\">\r\n                <Select\r\n                    placeholder=\"Выберете дисциплину\"\r\n                    options={[\r\n                        {\r\n                            value: \"CS:GO\",\r\n                            label: \"CS:GO\",\r\n                        },\r\n                        {\r\n                            value: \"DOTA\",\r\n                            label: \"DOTA\",\r\n                        },\r\n                        {\r\n                            value: \"LOL\",\r\n                            label: \"LOL\",\r\n                        },\r\n                    ]}\r\n                />\r\n            </FormItem>\r\n\r\n            <FormItem top=\"Логотип команды\">\r\n                <File before={<Icon24Camera role=\"presentation\" />} size=\"m\">\r\n                    Загрузить логотип\r\n                </File>\r\n            </FormItem>\r\n\r\n            <FormItem>\r\n                <Checkbox>\r\n                    Согласен с продажей <Link>почки</Link>\r\n                </Checkbox>\r\n            </FormItem>\r\n\r\n            <FormItem>\r\n                <Button size=\"l\" stretched>\r\n                    Зарегистрироваться\r\n                </Button>\r\n            </FormItem>\r\n        </FormLayout>\r\n    </Group>\r\n</Panel>        \r\n);\r\n\r\nTeams.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Teams;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeaderBack, PanelHeader, Group, FormLayout, FormItem, Input, FormLayoutGroup, Textarea, Checkbox, Button, Link, Select, File } from '@vkontakte/vkui';\r\n\r\nimport { Icon24Camera } from '@vkontakte/icons';\r\n\r\nconst Profile = props => (    \r\n        <Panel id={props.id}>\r\n            <PanelHeader \r\n                left={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n            >Редактирование профиля\r\n            </PanelHeader>\r\n                <Group>\r\n                    <FormLayout>\r\n                        <FormItem\r\n                            top=\"О себе\"\r\n                        >\r\n                            <Textarea\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem top=\"Выбор дисциплин\">\r\n                            <Checkbox>\r\n                                CS:GO\r\n                            </Checkbox>\r\n                            <Checkbox>\r\n                                DOTA\r\n                            </Checkbox>\r\n                            <Checkbox>\r\n                                LOL\r\n                            </Checkbox>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button size=\"l\" stretched>\r\n                                Сохранить изменения\r\n                            </Button>\r\n                        </FormItem>\r\n                    </FormLayout>\r\n                </Group>\r\n        </Panel>    \r\n);\r\n  \r\nProfile.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst SearchTournier = props => (\r\n  <Panel id={props.id}>        \r\n\t\t<PanelHeader left={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}>\r\n\t\t\tПоиск турниров\r\n\t\t</PanelHeader>\r\n\t\t<Group></Group>\r\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\r\n\t</Panel>\r\n);  \r\n  \r\nSearchTournier.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchTournier;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, Group, FormLayout, FormItem, Input, FormLayoutGroup, Textarea, Checkbox, Button, Link, Select, File } from '@vkontakte/vkui';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst Notifications = props => (\r\n    <Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n\t\t>Persik\r\n\t\t</PanelHeader>\r\n        <Group></Group>\r\n    </Panel>\r\n );\r\n  \r\nNotifications.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Notifications;","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport Persik from './panels/Persik';\r\nimport Teams from './panels/Teams';\r\nimport Profile from './panels/Profile';\r\nimport SearchTournier from './panels/SearchTournier';\r\nimport Notifications from './panels/Notifications';\r\n\r\n\r\nconst App = () => {\r\n\tconst [scheme, setScheme] = useState('bright_light')\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(null); //<ScreenSpinner size='large' />\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tsetScheme(data.scheme)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ConfigProvider scheme={scheme}>\r\n\t\t\t<AdaptivityProvider>\r\n\t\t\t\t<AppRoot>\r\n\t\t\t\t\t<SplitLayout popout={popout}>\r\n\t\t\t\t\t\t<SplitCol>\r\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\r\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\r\n\t\t\t\t\t\t\t\t<Teams id='teams' go={go} />\r\n\t\t\t\t\t\t\t\t<Profile id='profile' go={go} />\r\n\t\t\t\t\t\t\t\t<SearchTournier id='SearchTournier' go={go} />\r\n\t\t\t\t\t\t\t\t<Notifications id='notifications' go={go} />\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</SplitCol>\r\n\t\t\t\t\t</SplitLayout>\r\n\t\t\t\t</AppRoot>\r\n\t\t\t</AdaptivityProvider>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}